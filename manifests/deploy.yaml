apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: pod-limit-oom-recorder
  name: pod-limit-oom-recorder
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: pod-limit-oom-recorder
  name: pod-limit-oom-recorder
rules:
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ''
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resourceNames:
  - pod-limit-oom-recorder
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    k8s-app: pod-limit-oom-recorder
  name: pod-limit-oom-recorder
spec:
  privileged: true
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - 'configMap'
  - 'secret'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: pod-limit-oom-recorder
  name: pod-limit-oom-recorder
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-limit-oom-recorder
subjects:
- kind: ServiceAccount
  name: pod-limit-oom-recorder
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: pod-limit-oom-recorder
  labels:
    k8s-app: pod-limit-oom-recorder
  namespace: kube-system
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 100%
  selector:
    matchLabels:
      k8s-app: pod-limit-oom-recorder
  template:
    metadata:
      labels:
        k8s-app: pod-limit-oom-recorder
    spec:
      serviceAccountName: pod-limit-oom-recorder
      tolerations:
      - key: "node-role.kubernetes.io/ingress"
        operator: "Equal"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        effect: "NoSchedule"
      containers:
      - image: ghcr.io/uesyn/pod-limit-oom-recorder:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
        name: pod-limit-oom-recorder
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        args:
        - --node=$(NODE_NAME)
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: "/healthz"
            port: 8080
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: "/healthz"
            port: 8080
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
            ephemeral-storage: 50Mi
